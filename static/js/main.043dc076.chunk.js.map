{"version":3,"sources":["components/search/Search.js","utils/formatViewCount.js","components/videos/Video.js","components/utils/ErrorMessage.js","components/utils/Loader.js","config/config.js","utils/fetchVideos.js","components/videos/Videos.js","App.js","serviceWorker.js","index.js","logo.png"],"names":["useStyles","makeStyles","theme","root","padding","textAlign","input","marginLeft","spacing","maxWidth","width","flex","iconButton","paddingTop","paddingBottom","paddingLeft","paddingRight","backgroundColor","searchIcon","fontSize","color","Search","searchVideos","classes","useState","searchQuery","setSearchQuery","className","TextField","variant","placeholder","inputProps","onChange","event","target","value","Button","onClick","aria-label","startIcon","formatViewCount","x","parseInt","toLocaleString","marginBottom","breakpoints","up","display","details","flexDirection","content","videoTitle","lineHeight","smallImage","height","bigImage","channelTitle","grey","viewCount","Video","video","href","id","rel","style","textDecoration","Card","elevation","Box","xs","sm","alt","title","src","image_low_res","CardContent","image_high_res","Typography","channel_title","view_count","moment","published_at","startOf","fromNow","md","description","ErrorMessage","errorMessage","Loader","CircularProgress","fetchVideos","query","pageToken","order","a","params","pagetoken","axios","get","res","data","Videos","videos","setVideos","hasMoreVideos","setHasMoreVideos","setQuery","setPageToken","setErrorMessage","error","next_page_token","loadItems","page","length","allVideos","push","pageStart","loadMore","hasMore","loader","map","key","Math","random","logo","App","Container","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message","module","exports"],"mappings":"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","file":"static/js/main.043dc076.chunk.js","sourcesContent":["import React,{useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Button, TextField} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: '2px 4px',\n    textAlign: 'center'\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    maxWidth:600,\n    width:'70%',\n    flex: 1,\n  },\n  iconButton: {\n    paddingTop: 8,\n    paddingBottom:4,\n    paddingLeft: 14,\n    paddingRight:0,\n    backgroundColor:'#4BA5AA',\n    \"&:hover\": {\n      backgroundColor:'#3b7c7f'\n    }\n  },\n  searchIcon:{\n    marginLeft:0,\n    fontSize:'43px!important',\n    color:'white'\n  }\n}));\n\n/** Search Component - Triggers the fetch in the Videos Component sending the search query\n * @param  {Function} {searchVideos}\n */\nexport default function Search({searchVideos}) {\n  const classes = useStyles();\n\n  const [searchQuery, setSearchQuery] = useState(\"\")\n\n\n  return (\n    <div className={classes.root}>\n      <TextField\n        className={classes.input}\n        variant=\"outlined\" \n        placeholder=\"Search topics on the videos you want to find\"\n        inputProps={{ 'aria-label': 'search topics on the videos' }}\n        onChange={(event)=> setSearchQuery(event.target.value)}\n      />\n      <Button onClick={() =>searchVideos(searchQuery)} className={classes.iconButton} aria-label=\"search\" variant=\"contained\" startIcon={<SearchIcon className={classes.searchIcon}/>}>\n      </Button>\n    </div>\n  );\n}\n\n","\n/** Format View Count Value to have comma in thousands\n * @param  {Number} x View Count\n */\nconst formatViewCount = (x) => {\n  return parseInt(x).toLocaleString('en');\n\n};\n\nexport default formatViewCount;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Box,Card,CardContent,Typography} from '@material-ui/core';\nimport { grey } from '@material-ui/core/colors';\n\nimport moment from \"moment\";\n\nimport formatViewCount from '../../utils/formatViewCount'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginBottom: 30,\n    [theme.breakpoints.up('sm')]:{\n      display: 'flex'\n    } \n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  content: {\n    flex: '1 0 auto',\n    paddingTop:0\n  },\n  videoTitle:{\n    lineHeight:1.2\n  },\n  smallImage: {\n    width: 320,\n    height: 180\n  },\n  bigImage:{\n    width: '100%'\n  },\n  channelTitle:{\n    color: grey['700']\n  },\n  viewCount:{\n    backgroundColor:\"#4BA5AA\",\n    color:\"white\",\n    padding:2\n  }\n}));\n\n/** Video Item Component - Display Card with link, image, title, channel, view Count, Publishabled date and description\n * @param  {Object} {video}\n */\nexport default function Video({video}) {\n  const classes = useStyles();\n  return (\n    <a href={`https://www.youtube.com/watch?v=${video.id}`} target=\"_blank\" rel=\"noopener noreferrer\" style={{ textDecoration: 'none' }}>\n\n      <Card className={classes.root} elevation={0}>\n        <Box display={{ xs: 'none',sm:'block' }} >\n          <img display={{ xs: 'none'}} className={classes.smallImage} alt={video.title} src={video.image_low_res} />\n        </Box>\n        <div className={classes.details}>\n          <CardContent className={classes.content}>\n          <Box display={{ xs: 'block', sm: 'none' }} >\n            <img alt={video.title} src={video.image_high_res} className={classes.bigImage} />\n          </Box>\n            <Typography variant=\"h6\" className={classes.videoTitle}>\n              {video.title}\n            </Typography>\n            <Typography variant=\"subtitle2\" className={classes.channelTitle}>\n              {video.channel_title}\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            <span className={classes.viewCount}>{`${formatViewCount(video.view_count)} Views`}</span> • {moment(video.published_at).startOf(\"hour\").fromNow()}\n            </Typography>\n            <br/>\n            <Typography variant=\"subtitle2\" >\n              <Box display={{ xs: 'none',sm:'none',md:'block' }} >{video.description}</Box>\n            </Typography>\n            <br/>\n          </CardContent>\n        </div>\n      </Card>\n    </a>\n  );\n}","\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Typography} from '@material-ui/core';\n\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    textAlign: 'center'\n  }\n}));\n\n/** Error Message Component\n * @param  {string} {errorMessage} Error Message\n */\nexport default function ErrorMessage({errorMessage}) {\n  const classes = useStyles();\n  return (\n\n    <div className={classes.root}>\n      <br/><br/>\n      <Typography variant=\"h4\">{errorMessage}</Typography>\n\n    </div>\n  );\n}\n\n","\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    textAlign: 'center'\n  }\n}));\n\n/** Loader Component\n * \n */\nexport default function Loader() {\n  const classes = useStyles();\n  return (\n\n    <div className={classes.root}>\n      <br/><br/>\n      <CircularProgress color=\"secondary\"/>\n\n    </div>\n  );\n}\n\n\n\n\n","export const searchAPI = \"https://cors-anywhere.herokuapp.com/http://159.203.181.231/api/search\"; //Search API EndPoint\n","import { searchAPI } from \"../config/config\";\nimport axios from 'axios';\n\n\n\n/** Fetch Video List from Backend\n * @param  {String} query Video query term to search for\n * @param  {String} pageToken Indentifies a specific page in the results to be returned \n * @param  {String} order Ordering criteria (relevance, date, rating, relevance, title, videoCount, viewCount) \n */\nconst fetchVideos = async(query,pageToken,order) =>{\n\n  let params={query};\n  if(order) params.order=order;\n  if(pageToken) params.pagetoken=pageToken;\n\n  const res = await axios.get(searchAPI, { params});\n  return res.data;\n}\n\nexport default fetchVideos;","import React,{useState} from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\n\nimport Search from '../search/Search';\nimport Video from './Video';\nimport ErrorMessage from '../utils/ErrorMessage';\nimport Loader from '../utils/Loader';\n\nimport fetchVideos from '../../utils/fetchVideos'\n\n/** Videos Component - List all videos using a infinite scroll\n */\nfunction Videos() {\n  \n  const [videos, setVideos] = useState([]);\n  const [hasMoreVideos, setHasMoreVideos] = useState(false);\n  const [query,setQuery] = useState(null);\n  const [pageToken,setPageToken] = useState(null);\n  const [errorMessage,setErrorMessage]= useState(null);\n\n  const searchVideos = async(searchQuery) =>{\n    if(searchQuery!==\"\" && searchQuery!==query){\n      setVideos([]);\n      setPageToken(null);\n      setQuery(searchQuery);\n      const data=await fetchVideos(searchQuery);\n      if(!data.error){\n        setVideos(data.videos);\n        setErrorMessage(null);\n        if(data.next_page_token) {\n          setPageToken(data.next_page_token);\n          setHasMoreVideos(true);\n        }\n      }else{\n        setErrorMessage(data.error);\n      }\n    }\n    \n  }\n\n\n  const loadItems=async(page) => {\n    if(videos.length<200){\n      let allVideos=videos;\n      const data=await fetchVideos(query,pageToken);\n      if(!data.error){\n        for(const video of data.videos) allVideos.push(video);\n        if(data.next_page_token) {\n          setPageToken(data.next_page_token)\n          if(videos.length>=200){\n            setHasMoreVideos(false);\n\n          }else{\n            setHasMoreVideos(true);\n          }\n        }else{\n          setHasMoreVideos(false);\n        }\n      }else{\n        setHasMoreVideos(false);\n      }\n      \n      setVideos(allVideos);\n    }\n  }\n  return (\n    <div>\n      <Search searchVideos={searchVideos}></Search>\n      <br/>\n      {!errorMessage? \n      (\n        <InfiniteScroll\n          pageStart={0}\n          loadMore={loadItems}\n          hasMore={hasMoreVideos}\n          loader={<Loader/>}\n          >\n          <div>\n              {videos.map((video)=><Video key={video.id+Math.random()} video={video}/>)}\n          </div>\n        </InfiniteScroll>\n      ):(\n        <ErrorMessage errorMessage={errorMessage}/>\n      )\n    }\n    </div>\n  );\n}\n\nexport default Videos;\n","import React from 'react';\nimport {Container} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport logo from './logo.png';\n\nimport Videos from \"./components/videos/Videos\"\n\nconst useStyles = makeStyles((theme) => ({\n  logo: {\n    textAlign: 'center'\n  }\n  }));\n\nfunction App() {\n  const classes = useStyles();\n\n  \n  return (\n\n    <div className=\"App\">\n      <Container maxWidth=\"lg\">\n        <div className={classes.logo}><img src={logo} height={50} alt=\"Makrwatch\"/></div>\n        <Videos></Videos>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.90cd07f5.png\";"],"sourceRoot":""}